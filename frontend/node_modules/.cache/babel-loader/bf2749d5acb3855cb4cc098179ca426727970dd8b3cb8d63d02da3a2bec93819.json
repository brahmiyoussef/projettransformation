{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\i.choukhantri\\\\Desktop\\\\projet\\\\projettransformation\\\\frontend\\\\src\\\\Features\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [metrics, setMetrics] = useState({\n    totalConversions: 0,\n    totalFiles: 0,\n    activeUsers: 0,\n    notifications: 0\n  });\n  useEffect(() => {\n    // Utilisation de données factices pour le débogage\n    const mockData = [{\n      userId: 'user1',\n      fileCount: 3,\n      notification: true,\n      date: '2024-08-04'\n    }, {\n      userId: 'user2',\n      fileCount: 2,\n      notification: false,\n      date: '2024-08-03'\n    }\n    // Ajoutez d'autres données factices si nécessaire\n    ];\n    setRecords(mockData);\n  }, []);\n  useEffect(() => {\n    // Fetch data from backend\n    axios.get('/api/conversion-records').then(response => {\n      console.log('Data fetched from API:', response.data); // Log des données récupérées\n      setRecords(response.data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  useEffect(() => {\n    console.log('Records state updated:', records); // Log des données mises à jour\n\n    // Calculer les métriques basées sur les données récupérées\n    const totalConversions = records.length;\n    const totalFiles = records.reduce((sum, record) => sum + record.fileCount, 0);\n    const activeUsers = new Set(records.map(record => record.userId)).size;\n    const notifications = records.filter(record => record.notification).length;\n    console.log('Calculated Metrics:', {\n      totalConversions,\n      totalFiles,\n      activeUsers,\n      notifications\n    }); // Log des métriques calculées\n    setMetrics({\n      totalConversions,\n      totalFiles,\n      activeUsers,\n      notifications\n    });\n  }, [records]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-customColor text-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Total Conversions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl\",\n          children: metrics.totalConversions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-customColor text-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Total Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl\",\n          children: metrics.totalFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-customColor text-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Active Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl\",\n          children: metrics.activeUsers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-customColor text-white p-4 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold\",\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl\",\n          children: metrics.notifications\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Conversions Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 600,\n        height: 300,\n        data: records,\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"fileCount\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"#ccc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"a6LWH4rhp3lxXGy5L1/0phTsvpY=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","jsxDEV","_jsxDEV","HomePage","_s","records","setRecords","metrics","setMetrics","totalConversions","totalFiles","activeUsers","notifications","mockData","userId","fileCount","notification","date","get","then","response","console","log","data","catch","error","length","reduce","sum","record","Set","map","size","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","type","dataKey","stroke","_c","$RefreshReg$"],"sources":["C:/Users/i.choukhantri/Desktop/projet/projettransformation/frontend/src/Features/HomePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\r\n\r\nconst HomePage = () => {\r\n  const [records, setRecords] = useState([]);\r\n  const [metrics, setMetrics] = useState({\r\n    totalConversions: 0,\r\n    totalFiles: 0,\r\n    activeUsers: 0,\r\n    notifications: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Utilisation de données factices pour le débogage\r\n    const mockData = [\r\n      { userId: 'user1', fileCount: 3, notification: true, date: '2024-08-04' },\r\n      { userId: 'user2', fileCount: 2, notification: false, date: '2024-08-03' },\r\n      // Ajoutez d'autres données factices si nécessaire\r\n    ];\r\n    setRecords(mockData);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from backend\r\n    axios.get('/api/conversion-records')\r\n      .then(response => {\r\n        console.log('Data fetched from API:', response.data); // Log des données récupérées\r\n        setRecords(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Records state updated:', records); // Log des données mises à jour\r\n\r\n    // Calculer les métriques basées sur les données récupérées\r\n    const totalConversions = records.length;\r\n    const totalFiles = records.reduce((sum, record) => sum + record.fileCount, 0);\r\n    const activeUsers = new Set(records.map(record => record.userId)).size;\r\n    const notifications = records.filter(record => record.notification).length;\r\n\r\n    console.log('Calculated Metrics:', { totalConversions, totalFiles, activeUsers, notifications }); // Log des métriques calculées\r\n    setMetrics({ totalConversions, totalFiles, activeUsers, notifications });\r\n  }, [records]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-4\">\r\n      \r\n      \r\n      {/* Dashboard Section */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n        <div className=\"bg-customColor text-white p-4 rounded-lg shadow-md\">\r\n          <h2 className=\"text-xl font-bold\">Total Conversions</h2>\r\n          <p className=\"text-2xl\">{metrics.totalConversions}</p>\r\n        </div>\r\n        <div className=\"bg-customColor text-white p-4 rounded-lg shadow-md\">\r\n          <h2 className=\"text-xl font-bold\">Total Files</h2>\r\n          <p className=\"text-2xl\">{metrics.totalFiles}</p>\r\n        </div>\r\n        <div className=\"bg-customColor text-white p-4 rounded-lg shadow-md\">\r\n          <h2 className=\"text-xl font-bold\">Active Users</h2>\r\n          <p className=\"text-2xl\">{metrics.activeUsers}</p>\r\n        </div>\r\n        <div className=\"bg-customColor text-white p-4 rounded-lg shadow-md\">\r\n          <h2 className=\"text-xl font-bold\">Notifications</h2>\r\n          <p className=\"text-2xl\">{metrics.notifications}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chart Section */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg mb-8\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Conversions Over Time</h2>\r\n        <LineChart width={600} height={300} data={records}>\r\n          <Line type=\"monotone\" dataKey=\"fileCount\" stroke=\"#8884d8\" />\r\n          <CartesianGrid stroke=\"#ccc\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n        </LineChart>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}